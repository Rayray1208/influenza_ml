



## 程式說明書

### 概述
此程式使用 XGBoost 回歸模型來預測確診病例數，並在預測結果與實際結果間進行評估。程式將資料集分成訓練集和測試集，生成滯後特徵（Lag features），並評估預測結果的準確性。最後，以圖表方式呈現預測結果及模型的樹結構。

### 套件需求
- **pandas**：用於處理和操作資料框。
- **numpy**：數值計算，特別是陣列處理。
- **sklearn.metrics**：提供評估指標，包括均方誤差（MSE）、平均絕對誤差（MAE）等。
- **xgboost**：執行 XGBoost 模型。
- **matplotlib**：生成可視化圖表。

### 函數和主要部分說明

#### 1. `create_lag_features(data, lag)`
   - **功能**：為資料集創建滯後特徵。此特徵能保留前幾期的 `ConfirmedCases`，用於時間序列預測。
   - **參數**：
     - `data`：包含 `ConfirmedCases` 欄位的資料框。
     - `lag`：滯後期數，即要創建多少個滯後特徵。
   - **回傳**：新增滯後特徵的資料框。
   
#### 2. `calculate_mape(y_true, y_pred, epsilon=1e-10)`
   - **功能**：計算平均絕對百分比誤差（MAPE）。
   - **參數**：
     - `y_true`：真實值陣列。
     - `y_pred`：預測值陣列。
     - `epsilon`：避免分母為零的小數。
   - **回傳**：MAPE 值（百分比）。

#### 3. `main()`
   - **功能**：程式的主要運行邏輯，包括數據讀取、特徵生成、資料分割、模型訓練與評估、以及結果可視化。
   - **步驟**：
     1. **讀取資料**：從 CSV 檔案 `merged_file.csv` 中讀取數據。
     2. **生成滯後特徵**：創建 3 個滯後特徵。
     3. **資料處理**：刪除生成滯後特徵時產生的空值。
     4. **提取年份和周數**：從 `YearWeek` 欄位分割出 `Year` 和 `Week`。
     5. **特徵選取**：使用選定欄位做為模型的輸入特徵。
     6. **資料分割**：按時間順序將資料分為訓練集（80%）和測試集（20%）。
     7. **模型訓練**：使用 XGBoost 訓練模型。
     8. **模型評估**：計算 MSE、MAE 和 MAPE 以評估模型準確性。
     9. **結果可視化**：生成真實值與預測值的折線圖，並顯示模型的第一棵樹的結構。

### 程式輸出
1. **評估指標**：
   - **MSE**：均方誤差，用來衡量預測值與實際值之間的偏差。
   - **MAE**：平均絕對誤差。
   - **MAPE**：平均絕對百分比誤差（百分比形式）。

2. **可視化圖表**：
   - **時間序列圖**：展示真實值與預測值的折線圖 (`time_series_xgboost.png`)。
   - **XGBoost 樹結構**：模型的第一棵樹的視覺化圖 (`xgboost_tree.png`)。

### 注意事項
- `YearWeek` 欄位應以 YYYYWW 格式儲存，例如 202345 表示 2023 年的第 45 週。
- 請確保 `merged_file.csv` 存在於程式目錄下，且包含以下欄位：
  - `YearWeek`、`ConfirmedCases`、`ExcludedCases`、`PendingCases`、`AverageTemperature`。
- 由於此程式使用時間序列分割，請謹慎處理測試集上的資料滲漏問題。



